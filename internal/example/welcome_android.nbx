frame(
    name = "welcome",
    route = "/welcome"
) {
    var visible: BOOLEAN = true
    var enable: BOOLEAN = true
    var count: INT = 0
    var increaseButton: STRING = "+"
    var decreaseButton: STRING = "-"
    var welcome: STRING = "Welcome to Nativeblocks"
    var logo: STRING = "https://nativeblocks.io/nativeblocks_logo.png"

    block(keyType = "ROOT", key = "root", visibility = visible)
    .slot("content") {
        block(keyType = "nativeblocks/column", key = "mainColumn", visibility = visible, version = 1)
        .prop(horizontalAlignment = (valueMobile = "centerHorizontally", valueTablet = "centerHorizontally", valueDesktop = "centerHorizontally"))
        .prop(width = (valueMobile = "match", valueTablet = "match", valueDesktop = "match"))
        .prop(height = (valueMobile = "match", valueTablet = "match", valueDesktop = "match"))
        .slot("content") {
            block(keyType = "nativeblocks/column", key = "nativeblocksColumn", VISIBILITY = visible, version = 1)
            .prop(horizontalAlignment = (valueMobile = "centerHorizontally", valueTablet = "centerHorizontally", valueDesktop = "centerHorizontally"))
            .prop(paddingTop = (valueMobile = "64", valueTablet = "64", valueDesktop = "64"))
            .prop(weight = (valueMobile = "0.4f", valueTablet = "0.4f", valueDesktop = "0.4f"))
            .prop(verticalArrangement = (valueMobile = "spaceAround", valueTablet = "spaceAround", valueDesktop = "spaceAround"))
            .slot("content") {
                block(keyType = "nativeblocks/image", key = "logo", visibility = visible, version = 1)
                .prop(scaleType = (valueMobile = "inside", valueTablet = "inside", valueDesktop = "inside"))
                .prop(width = (valueMobile = "128", valueTablet = "128", valueDesktop = "128"))
                .prop(height = (valueMobile = "128", valueTablet = "128", valueDesktop = "128"))
                .data(imageUrl = logo)

                block(keyType = "nativeblocks/text", key = "welcome", visibility = visible, version = 1)
                .prop(fontSize = (valueMobile = "24", valueTablet = "24", valueDesktop = "24"))
                .prop(textAlign = (valueMobile = "center", valueTablet = "center", valueDesktop = "center"))
                .prop(width = (valueMobile = "wrap", valueTablet = "wrap", valueDesktop = "wrap"))
                .data(text = welcome)
            }
            block(keyType = "nativeblocks/row", key = "buttonsRow", visibility = visible, version = 1)
            .prop(horizontalArrangement = (valueMobile = "spaceAround", valueTablet = "spaceAround", valueDesktop = "spaceAround"))
            .prop(verticalAlignment = (valueMobile = "centerVertically", valueTablet = "centerVertically", valueDesktop = "centerVertically"))
            .prop(paddingTop = (valueMobile = "12", valueTablet = "12", valueDesktop = "12"))
            .prop(weight = (valueMobile = "0.6f", valueTablet = "0.6f", valueDesktop = "0.6f"))
            .slot("content") {
                block(keyType = "nativeblocks/button", key = "decreaseButton", visibility = visible, version = 1)
                .prop(backgroundColor = (valueMobile = "#2563EB", valueTablet = "#2563EB", valueDesktop = "#2563EB"))
                .prop(borderColor = (valueMobile = "#2563EB", valueTablet = "#2563EB", valueDesktop = "#2563EB"))
                .prop(radiusTopStart = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(radiusTopEnd = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(radiusBottomStart = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(radiusBottomEnd = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(fontSize = (valueMobile = "20", valueTablet = "20", valueDesktop = "20"))
                .data(text = decreaseButton)
                .data(enable = enable)
                .action(event = "onClick") {
                    trigger(keyType = "nativeblocks/change_variable", name = "decrease", version = 1)
                    .prop(variableValue = "#SCRIPT
                    const count = {var:count}
                    let result = count
                    if (count >= 1) {
                        result = count - 1
                    } else {
                        result = count
                    }
                    result
                    #ENDSCRIPT")
                    .data(variableKey = count)
                }
                block(keyType = "nativeblocks/text", key = "countText", visibility = visible, version = 1)
                .prop(fontSize = (valueMobile = "18", valueTablet = "18", valueDesktop = "18"))
                .prop(textAlign = (valueMobile = "center", valueTablet = "center", valueDesktop = "center"))
                .prop(width = (valueMobile = "128", valueTablet = "128", valueDesktop = "128"))
                .data(text = count)
                block(keyType = "nativeblocks/button", key = "increaseButton", visibility = visible, version = 1)
                .prop(backgroundColor = (valueMobile = "#2563EB", valueTablet = "#2563EB", valueDesktop = "#2563EB"))
                .prop(borderColor = (valueMobile = "#2563EB", valueTablet = "#2563EB", valueDesktop = "#2563EB"))
                .prop(radiusTopStart = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(radiusTopEnd = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(radiusBottomStart = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(radiusBottomEnd = (valueMobile = "32", valueTablet = "32", valueDesktop = "32"))
                .prop(fontSize = (valueMobile = "20", valueTablet = "20", valueDesktop = "20"))
                .data(text = increaseButton)
                .data(enable = enable)
                .action(event = "onClick") {
                    trigger(keyType = "nativeblocks/change_variable", name = "increase", version = 1)
                    .prop(variableValue = "#SCRIPT
                    const count = {var:count}
                    const result = count + 1
                    result
                    #ENDSCRIPT")
                    .data(variableKey = count)
                }
            }
        }
    }
}